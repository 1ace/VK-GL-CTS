/* WARNING: This is auto-generated file. Do not modify, since changes will
 * be lost! Modify the generating script instead.
 */
#define VK_API_VERSION				VK_MAKE_VERSION(0, 90, 0)
#define VK_MAX_PHYSICAL_DEVICE_NAME	256
#define VK_MAX_EXTENSION_NAME		256

VK_DEFINE_BASE_HANDLE				(VkObject);
VK_DEFINE_DISP_SUBCLASS_HANDLE		(VkInstance,			VkObject);
VK_DEFINE_DISP_SUBCLASS_HANDLE		(VkPhysicalDevice,		VkObject);
VK_DEFINE_DISP_SUBCLASS_HANDLE		(VkDevice,				VkObject);
VK_DEFINE_DISP_SUBCLASS_HANDLE		(VkQueue,				VkObject);
VK_DEFINE_DISP_SUBCLASS_HANDLE		(VkCmdBuffer,			VkObject);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkNonDispatchable,		VkObject);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDeviceMemory,		VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkBuffer,				VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkBufferView,			VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkImage,				VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkImageView,			VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkColorAttachmentView,	VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDepthStencilView,	VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkShader,				VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkPipeline,			VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkPipelineLayout,		VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkSampler,				VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDescriptorSet,		VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDescriptorSetLayout,	VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDescriptorPool,		VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDynamicStateObject,	VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDynamicVpState,		VkDynamicStateObject);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDynamicRsState,		VkDynamicStateObject);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDynamicCbState,		VkDynamicStateObject);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkDynamicDsState,		VkDynamicStateObject);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkFence,				VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkSemaphore,			VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkEvent,				VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkQueryPool,			VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkFramebuffer,			VkNonDispatchable);
VK_DEFINE_NONDISP_SUBCLASS_HANDLE	(VkRenderPass,			VkNonDispatchable);

enum VkMemoryPriority
{
	VK_MEMORY_PRIORITY_UNUSED		= 0x00000000,
	VK_MEMORY_PRIORITY_VERY_LOW		= 0x00000001,
	VK_MEMORY_PRIORITY_LOW			= 0x00000002,
	VK_MEMORY_PRIORITY_NORMAL		= 0x00000003,
	VK_MEMORY_PRIORITY_HIGH			= 0x00000004,
	VK_MEMORY_PRIORITY_VERY_HIGH	= 0x00000005,
};

enum VkImageLayout
{
	VK_IMAGE_LAYOUT_UNDEFINED							= 0x00000000,
	VK_IMAGE_LAYOUT_GENERAL								= 0x00000001,
	VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL			= 0x00000002,
	VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL	= 0x00000003,
	VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL		= 0x00000004,
	VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL			= 0x00000005,
	VK_IMAGE_LAYOUT_CLEAR_OPTIMAL						= 0x00000006,
	VK_IMAGE_LAYOUT_TRANSFER_SOURCE_OPTIMAL				= 0x00000007,
	VK_IMAGE_LAYOUT_TRANSFER_DESTINATION_OPTIMAL		= 0x00000008,
};

enum VkPipeEvent
{
	VK_PIPE_EVENT_TOP_OF_PIPE							= 0x00000001,
	VK_PIPE_EVENT_VERTEX_PROCESSING_COMPLETE			= 0x00000002,
	VK_PIPE_EVENT_LOCAL_FRAGMENT_PROCESSING_COMPLETE	= 0x00000003,
	VK_PIPE_EVENT_FRAGMENT_PROCESSING_COMPLETE			= 0x00000004,
	VK_PIPE_EVENT_GRAPHICS_PIPELINE_COMPLETE			= 0x00000005,
	VK_PIPE_EVENT_COMPUTE_PIPELINE_COMPLETE				= 0x00000006,
	VK_PIPE_EVENT_TRANSFER_COMPLETE						= 0x00000007,
	VK_PIPE_EVENT_COMMANDS_COMPLETE						= 0x00000008,
};

enum VkWaitEvent
{
	VK_WAIT_EVENT_TOP_OF_PIPE			= 0x00000001,
	VK_WAIT_EVENT_BEFORE_RASTERIZATION	= 0x00000002,
};

enum VkAttachmentLoadOp
{
	VK_ATTACHMENT_LOAD_OP_LOAD		= 0x00000000,
	VK_ATTACHMENT_LOAD_OP_CLEAR		= 0x00000001,
	VK_ATTACHMENT_LOAD_OP_DONT_CARE	= 0x00000002,
};

enum VkAttachmentStoreOp
{
	VK_ATTACHMENT_STORE_OP_STORE		= 0x00000000,
	VK_ATTACHMENT_STORE_OP_RESOLVE_MSAA	= 0x00000001,
	VK_ATTACHMENT_STORE_OP_DONT_CARE	= 0x00000002,
};

enum VkImageType
{
	VK_IMAGE_TYPE_1D	= 0x00000000,
	VK_IMAGE_TYPE_2D	= 0x00000001,
	VK_IMAGE_TYPE_3D	= 0x00000002,
};

enum VkImageTiling
{
	VK_IMAGE_TILING_LINEAR	= 0x00000000,
	VK_IMAGE_TILING_OPTIMAL	= 0x00000001,
};

enum VkImageViewType
{
	VK_IMAGE_VIEW_TYPE_1D	= 0x00000000,
	VK_IMAGE_VIEW_TYPE_2D	= 0x00000001,
	VK_IMAGE_VIEW_TYPE_3D	= 0x00000002,
	VK_IMAGE_VIEW_TYPE_CUBE	= 0x00000003,
};

enum VkImageAspect
{
	VK_IMAGE_ASPECT_COLOR	= 0x00000000,
	VK_IMAGE_ASPECT_DEPTH	= 0x00000001,
	VK_IMAGE_ASPECT_STENCIL	= 0x00000002,
};

enum VkBufferViewType
{
	VK_BUFFER_VIEW_TYPE_RAW			= 0x00000000,
	VK_BUFFER_VIEW_TYPE_FORMATTED	= 0x00000001,
};

enum VkChannelSwizzle
{
	VK_CHANNEL_SWIZZLE_ZERO	= 0x00000000,
	VK_CHANNEL_SWIZZLE_ONE	= 0x00000001,
	VK_CHANNEL_SWIZZLE_R	= 0x00000002,
	VK_CHANNEL_SWIZZLE_G	= 0x00000003,
	VK_CHANNEL_SWIZZLE_B	= 0x00000004,
	VK_CHANNEL_SWIZZLE_A	= 0x00000005,
};

enum VkDescriptorType
{
	VK_DESCRIPTOR_TYPE_SAMPLER					= 0x00000000,
	VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER	= 0x00000001,
	VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE			= 0x00000002,
	VK_DESCRIPTOR_TYPE_STORAGE_IMAGE			= 0x00000003,
	VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER		= 0x00000004,
	VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER		= 0x00000005,
	VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER			= 0x00000006,
	VK_DESCRIPTOR_TYPE_STORAGE_BUFFER			= 0x00000007,
	VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC	= 0x00000008,
	VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC	= 0x00000009,
};

enum VkDescriptorPoolUsage
{
	VK_DESCRIPTOR_POOL_USAGE_ONE_SHOT	= 0x00000000,
	VK_DESCRIPTOR_POOL_USAGE_DYNAMIC	= 0x00000001,
};

enum VkDescriptorUpdateMode
{
	VK_DESCRIPTOR_UPDATE_MODE_COPY		= 0x00000000,
	VK_DESCRIPTOR_UPDATE_MODE_FASTEST	= 0x00000001,
};

enum VkDescriptorSetUsage
{
	VK_DESCRIPTOR_SET_USAGE_ONE_SHOT	= 0x00000000,
	VK_DESCRIPTOR_SET_USAGE_STATIC		= 0x00000001,
};

enum VkQueryType
{
	VK_QUERY_TYPE_OCCLUSION				= 0x00000000,
	VK_QUERY_TYPE_PIPELINE_STATISTICS	= 0x00000001,
};

enum VkTimestampType
{
	VK_TIMESTAMP_TYPE_TOP		= 0x00000000,
	VK_TIMESTAMP_TYPE_BOTTOM	= 0x00000001,
};

enum VkBorderColor
{
	VK_BORDER_COLOR_OPAQUE_WHITE		= 0x00000000,
	VK_BORDER_COLOR_TRANSPARENT_BLACK	= 0x00000001,
	VK_BORDER_COLOR_OPAQUE_BLACK		= 0x00000002,
};

enum VkPipelineBindPoint
{
	VK_PIPELINE_BIND_POINT_COMPUTE	= 0x00000000,
	VK_PIPELINE_BIND_POINT_GRAPHICS	= 0x00000001,
};

enum VkStateBindPoint
{
	VK_STATE_BIND_POINT_VIEWPORT		= 0x00000000,
	VK_STATE_BIND_POINT_RASTER			= 0x00000001,
	VK_STATE_BIND_POINT_COLOR_BLEND		= 0x00000002,
	VK_STATE_BIND_POINT_DEPTH_STENCIL	= 0x00000003,
};

enum VkPrimitiveTopology
{
	VK_PRIMITIVE_TOPOLOGY_POINT_LIST			= 0x00000000,
	VK_PRIMITIVE_TOPOLOGY_LINE_LIST				= 0x00000001,
	VK_PRIMITIVE_TOPOLOGY_LINE_STRIP			= 0x00000002,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST			= 0x00000003,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP		= 0x00000004,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN			= 0x00000005,
	VK_PRIMITIVE_TOPOLOGY_LINE_LIST_ADJ			= 0x00000006,
	VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_ADJ		= 0x00000007,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_ADJ		= 0x00000008,
	VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_ADJ	= 0x00000009,
	VK_PRIMITIVE_TOPOLOGY_PATCH					= 0x0000000a,
};

enum VkIndexType
{
	VK_INDEX_TYPE_UINT8		= 0x00000000,
	VK_INDEX_TYPE_UINT16	= 0x00000001,
	VK_INDEX_TYPE_UINT32	= 0x00000002,
};

enum VkTexFilter
{
	VK_TEX_FILTER_NEAREST	= 0x00000000,
	VK_TEX_FILTER_LINEAR	= 0x00000001,
};

enum VkTexMipmapMode
{
	VK_TEX_MIPMAP_MODE_BASE		= 0x00000000,
	VK_TEX_MIPMAP_MODE_NEAREST	= 0x00000001,
	VK_TEX_MIPMAP_MODE_LINEAR	= 0x00000002,
};

enum VkTexAddress
{
	VK_TEX_ADDRESS_WRAP			= 0x00000000,
	VK_TEX_ADDRESS_MIRROR		= 0x00000001,
	VK_TEX_ADDRESS_CLAMP		= 0x00000002,
	VK_TEX_ADDRESS_MIRROR_ONCE	= 0x00000003,
	VK_TEX_ADDRESS_CLAMP_BORDER	= 0x00000004,
};

enum VkCompareOp
{
	VK_COMPARE_OP_NEVER			= 0x00000000,
	VK_COMPARE_OP_LESS			= 0x00000001,
	VK_COMPARE_OP_EQUAL			= 0x00000002,
	VK_COMPARE_OP_LESS_EQUAL	= 0x00000003,
	VK_COMPARE_OP_GREATER		= 0x00000004,
	VK_COMPARE_OP_NOT_EQUAL		= 0x00000005,
	VK_COMPARE_OP_GREATER_EQUAL	= 0x00000006,
	VK_COMPARE_OP_ALWAYS		= 0x00000007,
};

enum VkFillMode
{
	VK_FILL_MODE_POINTS		= 0x00000000,
	VK_FILL_MODE_WIREFRAME	= 0x00000001,
	VK_FILL_MODE_SOLID		= 0x00000002,
};

enum VkCullMode
{
	VK_CULL_MODE_NONE			= 0x00000000,
	VK_CULL_MODE_FRONT			= 0x00000001,
	VK_CULL_MODE_BACK			= 0x00000002,
	VK_CULL_MODE_FRONT_AND_BACK	= 0x00000003,
};

enum VkFrontFace
{
	VK_FRONT_FACE_CCW	= 0x00000000,
	VK_FRONT_FACE_CW	= 0x00000001,
};

enum VkProvokingVertex
{
	VK_PROVOKING_VERTEX_FIRST	= 0x00000000,
	VK_PROVOKING_VERTEX_LAST	= 0x00000001,
};

enum VkCoordinateOrigin
{
	VK_COORDINATE_ORIGIN_UPPER_LEFT	= 0x00000000,
	VK_COORDINATE_ORIGIN_LOWER_LEFT	= 0x00000001,
};

enum VkDepthMode
{
	VK_DEPTH_MODE_ZERO_TO_ONE			= 0x00000000,
	VK_DEPTH_MODE_NEGATIVE_ONE_TO_ONE	= 0x00000001,
};

enum VkBlend
{
	VK_BLEND_ZERO						= 0x00000000,
	VK_BLEND_ONE						= 0x00000001,
	VK_BLEND_SRC_COLOR					= 0x00000002,
	VK_BLEND_ONE_MINUS_SRC_COLOR		= 0x00000003,
	VK_BLEND_DEST_COLOR					= 0x00000004,
	VK_BLEND_ONE_MINUS_DEST_COLOR		= 0x00000005,
	VK_BLEND_SRC_ALPHA					= 0x00000006,
	VK_BLEND_ONE_MINUS_SRC_ALPHA		= 0x00000007,
	VK_BLEND_DEST_ALPHA					= 0x00000008,
	VK_BLEND_ONE_MINUS_DEST_ALPHA		= 0x00000009,
	VK_BLEND_CONSTANT_COLOR				= 0x0000000a,
	VK_BLEND_ONE_MINUS_CONSTANT_COLOR	= 0x0000000b,
	VK_BLEND_CONSTANT_ALPHA				= 0x0000000c,
	VK_BLEND_ONE_MINUS_CONSTANT_ALPHA	= 0x0000000d,
	VK_BLEND_SRC_ALPHA_SATURATE			= 0x0000000e,
	VK_BLEND_SRC1_COLOR					= 0x0000000f,
	VK_BLEND_ONE_MINUS_SRC1_COLOR		= 0x00000010,
	VK_BLEND_SRC1_ALPHA					= 0x00000011,
	VK_BLEND_ONE_MINUS_SRC1_ALPHA		= 0x00000012,
};

enum VkBlendOp
{
	VK_BLEND_OP_ADD					= 0x00000000,
	VK_BLEND_OP_SUBTRACT			= 0x00000001,
	VK_BLEND_OP_REVERSE_SUBTRACT	= 0x00000002,
	VK_BLEND_OP_MIN					= 0x00000003,
	VK_BLEND_OP_MAX					= 0x00000004,
};

enum VkStencilOp
{
	VK_STENCIL_OP_KEEP		= 0x00000000,
	VK_STENCIL_OP_ZERO		= 0x00000001,
	VK_STENCIL_OP_REPLACE	= 0x00000002,
	VK_STENCIL_OP_INC_CLAMP	= 0x00000003,
	VK_STENCIL_OP_DEC_CLAMP	= 0x00000004,
	VK_STENCIL_OP_INVERT	= 0x00000005,
	VK_STENCIL_OP_INC_WRAP	= 0x00000006,
	VK_STENCIL_OP_DEC_WRAP	= 0x00000007,
};

enum VkLogicOp
{
	VK_LOGIC_OP_COPY			= 0x00000000,
	VK_LOGIC_OP_CLEAR			= 0x00000001,
	VK_LOGIC_OP_AND				= 0x00000002,
	VK_LOGIC_OP_AND_REVERSE		= 0x00000003,
	VK_LOGIC_OP_AND_INVERTED	= 0x00000004,
	VK_LOGIC_OP_NOOP			= 0x00000005,
	VK_LOGIC_OP_XOR				= 0x00000006,
	VK_LOGIC_OP_OR				= 0x00000007,
	VK_LOGIC_OP_NOR				= 0x00000008,
	VK_LOGIC_OP_EQUIV			= 0x00000009,
	VK_LOGIC_OP_INVERT			= 0x0000000a,
	VK_LOGIC_OP_OR_REVERSE		= 0x0000000b,
	VK_LOGIC_OP_COPY_INVERTED	= 0x0000000c,
	VK_LOGIC_OP_OR_INVERTED		= 0x0000000d,
	VK_LOGIC_OP_NAND			= 0x0000000e,
	VK_LOGIC_OP_SET				= 0x0000000f,
};

enum VkSystemAllocType
{
	VK_SYSTEM_ALLOC_TYPE_API_OBJECT			= 0x00000000,
	VK_SYSTEM_ALLOC_TYPE_INTERNAL			= 0x00000001,
	VK_SYSTEM_ALLOC_TYPE_INTERNAL_TEMP		= 0x00000002,
	VK_SYSTEM_ALLOC_TYPE_INTERNAL_SHADER	= 0x00000003,
	VK_SYSTEM_ALLOC_TYPE_DEBUG				= 0x00000004,
};

enum VkPhysicalDeviceType
{
	VK_PHYSICAL_DEVICE_TYPE_OTHER			= 0x00000000,
	VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU	= 0x00000001,
	VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU	= 0x00000002,
	VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU		= 0x00000003,
	VK_PHYSICAL_DEVICE_TYPE_CPU				= 0x00000004,
};

enum VkPhysicalDeviceInfoType
{
	VK_PHYSICAL_DEVICE_INFO_TYPE_PROPERTIES			= 0x00000000,
	VK_PHYSICAL_DEVICE_INFO_TYPE_PERFORMANCE		= 0x00000001,
	VK_PHYSICAL_DEVICE_INFO_TYPE_QUEUE_PROPERTIES	= 0x00000002,
	VK_PHYSICAL_DEVICE_INFO_TYPE_MEMORY_PROPERTIES	= 0x00000003,
};

enum VkExtensionInfoType
{
	VK_EXTENSION_INFO_TYPE_COUNT		= 0x00000000,
	VK_EXTENSION_INFO_TYPE_PROPERTIES	= 0x00000001,
};

enum VkFormatInfoType
{
	VK_FORMAT_INFO_TYPE_PROPERTIES	= 0x00000000,
};

enum VkSubresourceInfoType
{
	VK_SUBRESOURCE_INFO_TYPE_LAYOUT	= 0x00000000,
};

enum VkObjectInfoType
{
	VK_OBJECT_INFO_TYPE_MEMORY_ALLOCATION_COUNT	= 0x00000000,
	VK_OBJECT_INFO_TYPE_MEMORY_REQUIREMENTS		= 0x00000001,
};

enum VkVertexInputStepRate
{
	VK_VERTEX_INPUT_STEP_RATE_VERTEX	= 0x0,
	VK_VERTEX_INPUT_STEP_RATE_INSTANCE	= 0x1,
	VK_VERTEX_INPUT_STEP_RATE_DRAW		= 0x2,
};

enum VkFormat
{
	VK_FORMAT_UNDEFINED				= 0x00000000,
	VK_FORMAT_R4G4_UNORM			= 0x00000001,
	VK_FORMAT_R4G4_USCALED			= 0x00000002,
	VK_FORMAT_R4G4B4A4_UNORM		= 0x00000003,
	VK_FORMAT_R4G4B4A4_USCALED		= 0x00000004,
	VK_FORMAT_R5G6B5_UNORM			= 0x00000005,
	VK_FORMAT_R5G6B5_USCALED		= 0x00000006,
	VK_FORMAT_R5G5B5A1_UNORM		= 0x00000007,
	VK_FORMAT_R5G5B5A1_USCALED		= 0x00000008,
	VK_FORMAT_R8_UNORM				= 0x00000009,
	VK_FORMAT_R8_SNORM				= 0x0000000A,
	VK_FORMAT_R8_USCALED			= 0x0000000B,
	VK_FORMAT_R8_SSCALED			= 0x0000000C,
	VK_FORMAT_R8_UINT				= 0x0000000D,
	VK_FORMAT_R8_SINT				= 0x0000000E,
	VK_FORMAT_R8_SRGB				= 0x0000000F,
	VK_FORMAT_R8G8_UNORM			= 0x00000010,
	VK_FORMAT_R8G8_SNORM			= 0x00000011,
	VK_FORMAT_R8G8_USCALED			= 0x00000012,
	VK_FORMAT_R8G8_SSCALED			= 0x00000013,
	VK_FORMAT_R8G8_UINT				= 0x00000014,
	VK_FORMAT_R8G8_SINT				= 0x00000015,
	VK_FORMAT_R8G8_SRGB				= 0x00000016,
	VK_FORMAT_R8G8B8_UNORM			= 0x00000017,
	VK_FORMAT_R8G8B8_SNORM			= 0x00000018,
	VK_FORMAT_R8G8B8_USCALED		= 0x00000019,
	VK_FORMAT_R8G8B8_SSCALED		= 0x0000001A,
	VK_FORMAT_R8G8B8_UINT			= 0x0000001B,
	VK_FORMAT_R8G8B8_SINT			= 0x0000001C,
	VK_FORMAT_R8G8B8_SRGB			= 0x0000001D,
	VK_FORMAT_R8G8B8A8_UNORM		= 0x0000001E,
	VK_FORMAT_R8G8B8A8_SNORM		= 0x0000001F,
	VK_FORMAT_R8G8B8A8_USCALED		= 0x00000020,
	VK_FORMAT_R8G8B8A8_SSCALED		= 0x00000021,
	VK_FORMAT_R8G8B8A8_UINT			= 0x00000022,
	VK_FORMAT_R8G8B8A8_SINT			= 0x00000023,
	VK_FORMAT_R8G8B8A8_SRGB			= 0x00000024,
	VK_FORMAT_R10G10B10A2_UNORM		= 0x00000025,
	VK_FORMAT_R10G10B10A2_SNORM		= 0x00000026,
	VK_FORMAT_R10G10B10A2_USCALED	= 0x00000027,
	VK_FORMAT_R10G10B10A2_SSCALED	= 0x00000028,
	VK_FORMAT_R10G10B10A2_UINT		= 0x00000029,
	VK_FORMAT_R10G10B10A2_SINT		= 0x0000002A,
	VK_FORMAT_R16_UNORM				= 0x0000002B,
	VK_FORMAT_R16_SNORM				= 0x0000002C,
	VK_FORMAT_R16_USCALED			= 0x0000002D,
	VK_FORMAT_R16_SSCALED			= 0x0000002E,
	VK_FORMAT_R16_UINT				= 0x0000002F,
	VK_FORMAT_R16_SINT				= 0x00000030,
	VK_FORMAT_R16_SFLOAT			= 0x00000031,
	VK_FORMAT_R16G16_UNORM			= 0x00000032,
	VK_FORMAT_R16G16_SNORM			= 0x00000033,
	VK_FORMAT_R16G16_USCALED		= 0x00000034,
	VK_FORMAT_R16G16_SSCALED		= 0x00000035,
	VK_FORMAT_R16G16_UINT			= 0x00000036,
	VK_FORMAT_R16G16_SINT			= 0x00000037,
	VK_FORMAT_R16G16_SFLOAT			= 0x00000038,
	VK_FORMAT_R16G16B16_UNORM		= 0x00000039,
	VK_FORMAT_R16G16B16_SNORM		= 0x0000003A,
	VK_FORMAT_R16G16B16_USCALED		= 0x0000003B,
	VK_FORMAT_R16G16B16_SSCALED		= 0x0000003C,
	VK_FORMAT_R16G16B16_UINT		= 0x0000003D,
	VK_FORMAT_R16G16B16_SINT		= 0x0000003E,
	VK_FORMAT_R16G16B16_SFLOAT		= 0x0000003F,
	VK_FORMAT_R16G16B16A16_UNORM	= 0x00000040,
	VK_FORMAT_R16G16B16A16_SNORM	= 0x00000041,
	VK_FORMAT_R16G16B16A16_USCALED	= 0x00000042,
	VK_FORMAT_R16G16B16A16_SSCALED	= 0x00000043,
	VK_FORMAT_R16G16B16A16_UINT		= 0x00000044,
	VK_FORMAT_R16G16B16A16_SINT		= 0x00000045,
	VK_FORMAT_R16G16B16A16_SFLOAT	= 0x00000046,
	VK_FORMAT_R32_UINT				= 0x00000047,
	VK_FORMAT_R32_SINT				= 0x00000048,
	VK_FORMAT_R32_SFLOAT			= 0x00000049,
	VK_FORMAT_R32G32_UINT			= 0x0000004A,
	VK_FORMAT_R32G32_SINT			= 0x0000004B,
	VK_FORMAT_R32G32_SFLOAT			= 0x0000004C,
	VK_FORMAT_R32G32B32_UINT		= 0x0000004D,
	VK_FORMAT_R32G32B32_SINT		= 0x0000004E,
	VK_FORMAT_R32G32B32_SFLOAT		= 0x0000004F,
	VK_FORMAT_R32G32B32A32_UINT		= 0x00000050,
	VK_FORMAT_R32G32B32A32_SINT		= 0x00000051,
	VK_FORMAT_R32G32B32A32_SFLOAT	= 0x00000052,
	VK_FORMAT_R64_SFLOAT			= 0x00000053,
	VK_FORMAT_R64G64_SFLOAT			= 0x00000054,
	VK_FORMAT_R64G64B64_SFLOAT		= 0x00000055,
	VK_FORMAT_R64G64B64A64_SFLOAT	= 0x00000056,
	VK_FORMAT_R11G11B10_UFLOAT		= 0x00000057,
	VK_FORMAT_R9G9B9E5_UFLOAT		= 0x00000058,
	VK_FORMAT_D16_UNORM				= 0x00000059,
	VK_FORMAT_D24_UNORM				= 0x0000005A,
	VK_FORMAT_D32_SFLOAT			= 0x0000005B,
	VK_FORMAT_S8_UINT				= 0x0000005C,
	VK_FORMAT_D16_UNORM_S8_UINT		= 0x0000005D,
	VK_FORMAT_D24_UNORM_S8_UINT		= 0x0000005E,
	VK_FORMAT_D32_SFLOAT_S8_UINT	= 0x0000005F,
	VK_FORMAT_BC1_RGB_UNORM			= 0x00000060,
	VK_FORMAT_BC1_RGB_SRGB			= 0x00000061,
	VK_FORMAT_BC1_RGBA_UNORM		= 0x00000062,
	VK_FORMAT_BC1_RGBA_SRGB			= 0x00000063,
	VK_FORMAT_BC2_UNORM				= 0x00000064,
	VK_FORMAT_BC2_SRGB				= 0x00000065,
	VK_FORMAT_BC3_UNORM				= 0x00000066,
	VK_FORMAT_BC3_SRGB				= 0x00000067,
	VK_FORMAT_BC4_UNORM				= 0x00000068,
	VK_FORMAT_BC4_SNORM				= 0x00000069,
	VK_FORMAT_BC5_UNORM				= 0x0000006A,
	VK_FORMAT_BC5_SNORM				= 0x0000006B,
	VK_FORMAT_BC6H_UFLOAT			= 0x0000006C,
	VK_FORMAT_BC6H_SFLOAT			= 0x0000006D,
	VK_FORMAT_BC7_UNORM				= 0x0000006E,
	VK_FORMAT_BC7_SRGB				= 0x0000006F,
	VK_FORMAT_ETC2_R8G8B8_UNORM		= 0x00000070,
	VK_FORMAT_ETC2_R8G8B8_SRGB		= 0x00000071,
	VK_FORMAT_ETC2_R8G8B8A1_UNORM	= 0x00000072,
	VK_FORMAT_ETC2_R8G8B8A1_SRGB	= 0x00000073,
	VK_FORMAT_ETC2_R8G8B8A8_UNORM	= 0x00000074,
	VK_FORMAT_ETC2_R8G8B8A8_SRGB	= 0x00000075,
	VK_FORMAT_EAC_R11_UNORM			= 0x00000076,
	VK_FORMAT_EAC_R11_SNORM			= 0x00000077,
	VK_FORMAT_EAC_R11G11_UNORM		= 0x00000078,
	VK_FORMAT_EAC_R11G11_SNORM		= 0x00000079,
	VK_FORMAT_ASTC_4x4_UNORM		= 0x0000007A,
	VK_FORMAT_ASTC_4x4_SRGB			= 0x0000007B,
	VK_FORMAT_ASTC_5x4_UNORM		= 0x0000007C,
	VK_FORMAT_ASTC_5x4_SRGB			= 0x0000007D,
	VK_FORMAT_ASTC_5x5_UNORM		= 0x0000007E,
	VK_FORMAT_ASTC_5x5_SRGB			= 0x0000007F,
	VK_FORMAT_ASTC_6x5_UNORM		= 0x00000080,
	VK_FORMAT_ASTC_6x5_SRGB			= 0x00000081,
	VK_FORMAT_ASTC_6x6_UNORM		= 0x00000082,
	VK_FORMAT_ASTC_6x6_SRGB			= 0x00000083,
	VK_FORMAT_ASTC_8x5_UNORM		= 0x00000084,
	VK_FORMAT_ASTC_8x5_SRGB			= 0x00000085,
	VK_FORMAT_ASTC_8x6_UNORM		= 0x00000086,
	VK_FORMAT_ASTC_8x6_SRGB			= 0x00000087,
	VK_FORMAT_ASTC_8x8_UNORM		= 0x00000088,
	VK_FORMAT_ASTC_8x8_SRGB			= 0x00000089,
	VK_FORMAT_ASTC_10x5_UNORM		= 0x0000008A,
	VK_FORMAT_ASTC_10x5_SRGB		= 0x0000008B,
	VK_FORMAT_ASTC_10x6_UNORM		= 0x0000008C,
	VK_FORMAT_ASTC_10x6_SRGB		= 0x0000008D,
	VK_FORMAT_ASTC_10x8_UNORM		= 0x0000008E,
	VK_FORMAT_ASTC_10x8_SRGB		= 0x0000008F,
	VK_FORMAT_ASTC_10x10_UNORM		= 0x00000090,
	VK_FORMAT_ASTC_10x10_SRGB		= 0x00000091,
	VK_FORMAT_ASTC_12x10_UNORM		= 0x00000092,
	VK_FORMAT_ASTC_12x10_SRGB		= 0x00000093,
	VK_FORMAT_ASTC_12x12_UNORM		= 0x00000094,
	VK_FORMAT_ASTC_12x12_SRGB		= 0x00000095,
	VK_FORMAT_B4G4R4A4_UNORM		= 0x00000096,
	VK_FORMAT_B5G5R5A1_UNORM		= 0x00000097,
	VK_FORMAT_B5G6R5_UNORM			= 0x00000098,
	VK_FORMAT_B5G6R5_USCALED		= 0x00000099,
	VK_FORMAT_B8G8R8_UNORM			= 0x0000009A,
	VK_FORMAT_B8G8R8_SNORM			= 0x0000009B,
	VK_FORMAT_B8G8R8_USCALED		= 0x0000009C,
	VK_FORMAT_B8G8R8_SSCALED		= 0x0000009D,
	VK_FORMAT_B8G8R8_UINT			= 0x0000009E,
	VK_FORMAT_B8G8R8_SINT			= 0x0000009F,
	VK_FORMAT_B8G8R8_SRGB			= 0x000000A0,
	VK_FORMAT_B8G8R8A8_UNORM		= 0x000000A1,
	VK_FORMAT_B8G8R8A8_SNORM		= 0x000000A2,
	VK_FORMAT_B8G8R8A8_USCALED		= 0x000000A3,
	VK_FORMAT_B8G8R8A8_SSCALED		= 0x000000A4,
	VK_FORMAT_B8G8R8A8_UINT			= 0x000000A5,
	VK_FORMAT_B8G8R8A8_SINT			= 0x000000A6,
	VK_FORMAT_B8G8R8A8_SRGB			= 0x000000A7,
	VK_FORMAT_B10G10R10A2_UNORM		= 0x000000A8,
	VK_FORMAT_B10G10R10A2_SNORM		= 0x000000A9,
	VK_FORMAT_B10G10R10A2_USCALED	= 0x000000AA,
	VK_FORMAT_B10G10R10A2_SSCALED	= 0x000000AB,
	VK_FORMAT_B10G10R10A2_UINT		= 0x000000AC,
	VK_FORMAT_B10G10R10A2_SINT		= 0x000000AD,
};

enum VkShaderStage
{
	VK_SHADER_STAGE_VERTEX			= 0,
	VK_SHADER_STAGE_TESS_CONTROL	= 1,
	VK_SHADER_STAGE_TESS_EVALUATION	= 2,
	VK_SHADER_STAGE_GEOMETRY		= 3,
	VK_SHADER_STAGE_FRAGMENT		= 4,
	VK_SHADER_STAGE_COMPUTE			= 5,
};

enum VkStructureType
{
	VK_STRUCTURE_TYPE_APPLICATION_INFO					= 0,
	VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO				= 1,
	VK_STRUCTURE_TYPE_MEMORY_ALLOC_INFO					= 2,
	VK_STRUCTURE_TYPE_MEMORY_OPEN_INFO					= 3,
	VK_STRUCTURE_TYPE_PEER_MEMORY_OPEN_INFO				= 4,
	VK_STRUCTURE_TYPE_BUFFER_VIEW_ATTACH_INFO			= 5,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_ATTACH_INFO			= 6,
	VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO			= 7,
	VK_STRUCTURE_TYPE_COLOR_ATTACHMENT_VIEW_CREATE_INFO	= 8,
	VK_STRUCTURE_TYPE_DEPTH_STENCIL_VIEW_CREATE_INFO	= 9,
	VK_STRUCTURE_TYPE_SHADER_CREATE_INFO				= 10,
	VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO		= 11,
	VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO				= 12,
	VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO	= 13,
	VK_STRUCTURE_TYPE_DYNAMIC_VP_STATE_CREATE_INFO		= 14,
	VK_STRUCTURE_TYPE_DYNAMIC_RS_STATE_CREATE_INFO		= 15,
	VK_STRUCTURE_TYPE_DYNAMIC_CB_STATE_CREATE_INFO		= 16,
	VK_STRUCTURE_TYPE_DYNAMIC_DS_STATE_CREATE_INFO		= 17,
	VK_STRUCTURE_TYPE_CMD_BUFFER_CREATE_INFO			= 18,
	VK_STRUCTURE_TYPE_EVENT_CREATE_INFO					= 19,
	VK_STRUCTURE_TYPE_FENCE_CREATE_INFO					= 20,
	VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO				= 21,
	VK_STRUCTURE_TYPE_SEMAPHORE_OPEN_INFO				= 22,
	VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO			= 23,
	VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO	= 24,
	VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO		= 25,
	VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_CREATE_INFO	= 26,
	VK_STRUCTURE_TYPE_PIPELINE_IA_STATE_CREATE_INFO		= 27,
	VK_STRUCTURE_TYPE_PIPELINE_TESS_STATE_CREATE_INFO	= 28,
	VK_STRUCTURE_TYPE_PIPELINE_VP_STATE_CREATE_INFO		= 29,
	VK_STRUCTURE_TYPE_PIPELINE_RS_STATE_CREATE_INFO		= 30,
	VK_STRUCTURE_TYPE_PIPELINE_MS_STATE_CREATE_INFO		= 31,
	VK_STRUCTURE_TYPE_PIPELINE_CB_STATE_CREATE_INFO		= 32,
	VK_STRUCTURE_TYPE_PIPELINE_DS_STATE_CREATE_INFO		= 33,
	VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO					= 34,
	VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO				= 35,
	VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO			= 36,
	VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO			= 37,
	VK_STRUCTURE_TYPE_CMD_BUFFER_BEGIN_INFO				= 38,
	VK_STRUCTURE_TYPE_CMD_BUFFER_GRAPHICS_BEGIN_INFO	= 39,
	VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO			= 40,
	VK_STRUCTURE_TYPE_LAYER_CREATE_INFO					= 41,
	VK_STRUCTURE_TYPE_MEMORY_BARRIER					= 42,
	VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER				= 43,
	VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER				= 44,
	VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO		= 45,
	VK_STRUCTURE_TYPE_UPDATE_SAMPLERS					= 46,
	VK_STRUCTURE_TYPE_UPDATE_SAMPLER_TEXTURES			= 47,
	VK_STRUCTURE_TYPE_UPDATE_IMAGES						= 48,
	VK_STRUCTURE_TYPE_UPDATE_BUFFERS					= 49,
	VK_STRUCTURE_TYPE_UPDATE_AS_COPY					= 50,
	VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO				= 51,
	VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO		= 52,
};

enum VkObjectType
{
	VK_OBJECT_TYPE_INSTANCE					= 0,
	VK_OBJECT_TYPE_PHYSICAL_DEVICE			= 1,
	VK_OBJECT_TYPE_DEVICE					= 2,
	VK_OBJECT_TYPE_QUEUE					= 3,
	VK_OBJECT_TYPE_COMMAND_BUFFER			= 4,
	VK_OBJECT_TYPE_DEVICE_MEMORY			= 5,
	VK_OBJECT_TYPE_BUFFER					= 6,
	VK_OBJECT_TYPE_BUFFER_VIEW				= 7,
	VK_OBJECT_TYPE_IMAGE					= 8,
	VK_OBJECT_TYPE_IMAGE_VIEW				= 9,
	VK_OBJECT_TYPE_COLOR_ATTACHMENT_VIEW	= 10,
	VK_OBJECT_TYPE_DEPTH_STENCIL_VIEW		= 11,
	VK_OBJECT_TYPE_SHADER					= 12,
	VK_OBJECT_TYPE_PIPELINE					= 13,
	VK_OBJECT_TYPE_PIPELINE_LAYOUT			= 14,
	VK_OBJECT_TYPE_SAMPLER					= 15,
	VK_OBJECT_TYPE_DESCRIPTOR_SET			= 16,
	VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT	= 17,
	VK_OBJECT_TYPE_DESCRIPTOR_POOL			= 18,
	VK_OBJECT_TYPE_DYNAMIC_VP_STATE			= 19,
	VK_OBJECT_TYPE_DYNAMIC_RS_STATE			= 20,
	VK_OBJECT_TYPE_DYNAMIC_CB_STATE			= 21,
	VK_OBJECT_TYPE_DYNAMIC_DS_STATE			= 22,
	VK_OBJECT_TYPE_FENCE					= 23,
	VK_OBJECT_TYPE_SEMAPHORE				= 24,
	VK_OBJECT_TYPE_EVENT					= 25,
	VK_OBJECT_TYPE_QUERY_POOL				= 26,
	VK_OBJECT_TYPE_FRAMEBUFFER				= 27,
	VK_OBJECT_TYPE_RENDER_PASS				= 28,
};

enum VkResult
{
	VK_SUCCESS								= 0x0000000,
	VK_UNSUPPORTED							= 0x0000001,
	VK_NOT_READY							= 0x0000002,
	VK_TIMEOUT								= 0x0000003,
	VK_EVENT_SET							= 0x0000004,
	VK_EVENT_RESET							= 0x0000005,
	VK_ERROR_UNKNOWN						= -(0x00000001),
	VK_ERROR_UNAVAILABLE					= -(0x00000002),
	VK_ERROR_INITIALIZATION_FAILED			= -(0x00000003),
	VK_ERROR_OUT_OF_HOST_MEMORY				= -(0x00000004),
	VK_ERROR_OUT_OF_DEVICE_MEMORY			= -(0x00000005),
	VK_ERROR_DEVICE_ALREADY_CREATED			= -(0x00000006),
	VK_ERROR_DEVICE_LOST					= -(0x00000007),
	VK_ERROR_INVALID_POINTER				= -(0x00000008),
	VK_ERROR_INVALID_VALUE					= -(0x00000009),
	VK_ERROR_INVALID_HANDLE					= -(0x0000000A),
	VK_ERROR_INVALID_ORDINAL				= -(0x0000000B),
	VK_ERROR_INVALID_MEMORY_SIZE			= -(0x0000000C),
	VK_ERROR_INVALID_EXTENSION				= -(0x0000000D),
	VK_ERROR_INVALID_FLAGS					= -(0x0000000E),
	VK_ERROR_INVALID_ALIGNMENT				= -(0x0000000F),
	VK_ERROR_INVALID_FORMAT					= -(0x00000010),
	VK_ERROR_INVALID_IMAGE					= -(0x00000011),
	VK_ERROR_INVALID_DESCRIPTOR_SET_DATA	= -(0x00000012),
	VK_ERROR_INVALID_QUEUE_TYPE				= -(0x00000013),
	VK_ERROR_INVALID_OBJECT_TYPE			= -(0x00000014),
	VK_ERROR_UNSUPPORTED_SHADER_IL_VERSION	= -(0x00000015),
	VK_ERROR_BAD_SHADER_CODE				= -(0x00000016),
	VK_ERROR_BAD_PIPELINE_DATA				= -(0x00000017),
	VK_ERROR_TOO_MANY_MEMORY_REFERENCES		= -(0x00000018),
	VK_ERROR_NOT_MAPPABLE					= -(0x00000019),
	VK_ERROR_MEMORY_MAP_FAILED				= -(0x0000001A),
	VK_ERROR_MEMORY_UNMAP_FAILED			= -(0x0000001B),
	VK_ERROR_INCOMPATIBLE_DEVICE			= -(0x0000001C),
	VK_ERROR_INCOMPATIBLE_DRIVER			= -(0x0000001D),
	VK_ERROR_INCOMPLETE_COMMAND_BUFFER		= -(0x0000001E),
	VK_ERROR_BUILDING_COMMAND_BUFFER		= -(0x0000001F),
	VK_ERROR_MEMORY_NOT_BOUND				= -(0x00000020),
	VK_ERROR_INCOMPATIBLE_QUEUE				= -(0x00000021),
	VK_ERROR_NOT_SHAREABLE					= -(0x00000022),
};

enum VkDeviceCreateFlagBits
{
	VK_DEVICE_CREATE_VALIDATION_BIT				= VK_BIT(0),
	VK_DEVICE_CREATE_MULTI_DEVICE_IQ_MATCH_BIT	= VK_BIT(1),
};
typedef deUint32 VkDeviceCreateFlags;

enum VkQueueFlagBits
{
	VK_QUEUE_GRAPHICS_BIT	= VK_BIT(0),
	VK_QUEUE_COMPUTE_BIT	= VK_BIT(1),
	VK_QUEUE_DMA_BIT		= VK_BIT(2),
	VK_QUEUE_MEMMGR_BIT		= VK_BIT(3),
	VK_QUEUE_EXTENDED_BIT	= VK_BIT(30),
};
typedef deUint32 VkQueueFlags;

enum VkMemoryPropertyFlagBits
{
	VK_MEMORY_PROPERTY_DEVICE_ONLY				= 0,
	VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT			= VK_BIT(0),
	VK_MEMORY_PROPERTY_HOST_DEVICE_COHERENT_BIT	= VK_BIT(1),
	VK_MEMORY_PROPERTY_HOST_UNCACHED_BIT		= VK_BIT(2),
	VK_MEMORY_PROPERTY_HOST_WRITE_COMBINED_BIT	= VK_BIT(3),
	VK_MEMORY_PROPERTY_PREFER_HOST_LOCAL		= VK_BIT(4),
	VK_MEMORY_PROPERTY_SHAREABLE_BIT			= VK_BIT(5),
};
typedef deUint32 VkMemoryPropertyFlags;

enum VkMemoryOutputFlagBits
{
	VK_MEMORY_OUTPUT_CPU_WRITE_BIT					= VK_BIT(0),
	VK_MEMORY_OUTPUT_SHADER_WRITE_BIT				= VK_BIT(1),
	VK_MEMORY_OUTPUT_COLOR_ATTACHMENT_BIT			= VK_BIT(2),
	VK_MEMORY_OUTPUT_DEPTH_STENCIL_ATTACHMENT_BIT	= VK_BIT(3),
	VK_MEMORY_OUTPUT_TRANSFER_BIT					= VK_BIT(4),
};
typedef deUint32 VkMemoryOutputFlags;

enum VkMemoryInputFlagBits
{
	VK_MEMORY_INPUT_CPU_READ_BIT					= VK_BIT(0),
	VK_MEMORY_INPUT_INDIRECT_COMMAND_BIT			= VK_BIT(1),
	VK_MEMORY_INPUT_INDEX_FETCH_BIT					= VK_BIT(2),
	VK_MEMORY_INPUT_VERTEX_ATTRIBUTE_FETCH_BIT		= VK_BIT(3),
	VK_MEMORY_INPUT_UNIFORM_READ_BIT				= VK_BIT(4),
	VK_MEMORY_INPUT_SHADER_READ_BIT					= VK_BIT(5),
	VK_MEMORY_INPUT_COLOR_ATTACHMENT_BIT			= VK_BIT(6),
	VK_MEMORY_INPUT_DEPTH_STENCIL_ATTACHMENT_BIT	= VK_BIT(7),
	VK_MEMORY_INPUT_TRANSFER_BIT					= VK_BIT(8),
};
typedef deUint32 VkMemoryInputFlags;

enum VkBufferUsageFlagBits
{
	VK_BUFFER_USAGE_GENERAL						= 0,
	VK_BUFFER_USAGE_TRANSFER_SOURCE_BIT			= VK_BIT(0),
	VK_BUFFER_USAGE_TRANSFER_DESTINATION_BIT	= VK_BIT(1),
	VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT	= VK_BIT(2),
	VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT	= VK_BIT(3),
	VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT			= VK_BIT(4),
	VK_BUFFER_USAGE_STORAGE_BUFFER_BIT			= VK_BIT(5),
	VK_BUFFER_USAGE_INDEX_BUFFER_BIT			= VK_BIT(6),
	VK_BUFFER_USAGE_VERTEX_BUFFER_BIT			= VK_BIT(7),
	VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT			= VK_BIT(8),
};
typedef deUint32 VkBufferUsageFlags;

enum VkBufferCreateFlagBits
{
	VK_BUFFER_CREATE_SHAREABLE_BIT	= VK_BIT(0),
	VK_BUFFER_CREATE_SPARSE_BIT		= VK_BIT(1),
};
typedef deUint32 VkBufferCreateFlags;

enum VkShaderStageFlagBits
{
	VK_SHADER_STAGE_VERTEX_BIT			= VK_BIT(0),
	VK_SHADER_STAGE_TESS_CONTROL_BIT	= VK_BIT(1),
	VK_SHADER_STAGE_TESS_EVALUATION_BIT	= VK_BIT(2),
	VK_SHADER_STAGE_GEOMETRY_BIT		= VK_BIT(3),
	VK_SHADER_STAGE_FRAGMENT_BIT		= VK_BIT(4),
	VK_SHADER_STAGE_COMPUTE_BIT			= VK_BIT(5),
	VK_SHADER_STAGE_ALL					= 0x7FFFFFFF,
};
typedef deUint32 VkShaderStageFlags;

enum VkImageUsageFlagBits
{
	VK_IMAGE_USAGE_GENERAL					= 0,
	VK_IMAGE_USAGE_TRANSFER_SOURCE_BIT		= VK_BIT(0),
	VK_IMAGE_USAGE_TRANSFER_DESTINATION_BIT	= VK_BIT(1),
	VK_IMAGE_USAGE_SAMPLED_BIT				= VK_BIT(2),
	VK_IMAGE_USAGE_STORAGE_BIT				= VK_BIT(3),
	VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT		= VK_BIT(4),
	VK_IMAGE_USAGE_DEPTH_STENCIL_BIT		= VK_BIT(5),
	VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT	= VK_BIT(6),
};
typedef deUint32 VkImageUsageFlags;

enum VkImageCreateFlagBits
{
	VK_IMAGE_CREATE_INVARIANT_DATA_BIT	= VK_BIT(0),
	VK_IMAGE_CREATE_CLONEABLE_BIT		= VK_BIT(1),
	VK_IMAGE_CREATE_SHAREABLE_BIT		= VK_BIT(2),
	VK_IMAGE_CREATE_SPARSE_BIT			= VK_BIT(3),
	VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT	= VK_BIT(4),
	VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT	= VK_BIT(5),
};
typedef deUint32 VkImageCreateFlags;

enum VkDepthStencilViewCreateFlagBits
{
	VK_DEPTH_STENCIL_VIEW_CREATE_READ_ONLY_DEPTH_BIT	= VK_BIT(0),
	VK_DEPTH_STENCIL_VIEW_CREATE_READ_ONLY_STENCIL_BIT	= VK_BIT(1),
};
typedef deUint32 VkDepthStencilViewCreateFlags;

enum VkPipelineCreateFlagBits
{
	VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT	= VK_BIT(0),
	VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT	= VK_BIT(1),
};
typedef deUint32 VkPipelineCreateFlags;

enum VkChannelFlagBits
{
	VK_CHANNEL_R_BIT	= VK_BIT(0),
	VK_CHANNEL_G_BIT	= VK_BIT(1),
	VK_CHANNEL_B_BIT	= VK_BIT(2),
	VK_CHANNEL_A_BIT	= VK_BIT(3),
};
typedef deUint32 VkChannelFlags;

enum VkFenceCreateFlagBits
{
	VK_FENCE_CREATE_SIGNALED_BIT	= VK_BIT(0),
};
typedef deUint32 VkFenceCreateFlags;

enum VkSemaphoreCreateFlagBits
{
	VK_SEMAPHORE_CREATE_SHAREABLE_BIT	= VK_BIT(0),
};
typedef deUint32 VkSemaphoreCreateFlags;

enum VkFormatFeatureFlagBits
{
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT					= VK_BIT(0),
	VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT					= VK_BIT(1),
	VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT			= VK_BIT(2),
	VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT			= VK_BIT(3),
	VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT			= VK_BIT(4),
	VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT	= VK_BIT(5),
	VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT					= VK_BIT(6),
	VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT				= VK_BIT(7),
	VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT		= VK_BIT(8),
	VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT		= VK_BIT(9),
	VK_FORMAT_FEATURE_CONVERSION_BIT					= VK_BIT(10),
};
typedef deUint32 VkFormatFeatureFlags;

enum VkQueryControlFlagBits
{
	VK_QUERY_CONTROL_CONSERVATIVE_BIT	= VK_BIT(0),
};
typedef deUint32 VkQueryControlFlags;

enum VkQueryResultFlagBits
{
	VK_QUERY_RESULT_32_BIT					= 0,
	VK_QUERY_RESULT_64_BIT					= VK_BIT(0),
	VK_QUERY_RESULT_NO_WAIT_BIT				= 0,
	VK_QUERY_RESULT_WAIT_BIT				= VK_BIT(1),
	VK_QUERY_RESULT_WITH_AVAILABILITY_BIT	= VK_BIT(2),
	VK_QUERY_RESULT_PARTIAL_BIT				= VK_BIT(3),
};
typedef deUint32 VkQueryResultFlags;

enum VkPhysicalDeviceCompatibilityFlagBits
{
	VK_PHYSICAL_DEVICE_COMPATIBILITY_FEATURES_BIT				= VK_BIT(0),
	VK_PHYSICAL_DEVICE_COMPATIBILITY_IQ_MATCH_BIT				= VK_BIT(1),
	VK_PHYSICAL_DEVICE_COMPATIBILITY_PEER_TRANSFER_BIT			= VK_BIT(2),
	VK_PHYSICAL_DEVICE_COMPATIBILITY_SHARED_MEMORY_BIT			= VK_BIT(3),
	VK_PHYSICAL_DEVICE_COMPATIBILITY_SHARED_SYNC_BIT			= VK_BIT(4),
	VK_PHYSICAL_DEVICE_COMPATIBILITY_SHARED_DEVICE0_DISPLAY_BIT	= VK_BIT(5),
	VK_PHYSICAL_DEVICE_COMPATIBILITY_SHARED_DEVICE1_DISPLAY_BIT	= VK_BIT(6),
};
typedef deUint32 VkPhysicalDeviceCompatibilityFlags;

enum VkCmdBufferOptimizeFlagBits
{
	VK_CMD_BUFFER_OPTIMIZE_SMALL_BATCH_BIT				= VK_BIT(0),
	VK_CMD_BUFFER_OPTIMIZE_PIPELINE_SWITCH_BIT			= VK_BIT(1),
	VK_CMD_BUFFER_OPTIMIZE_ONE_TIME_SUBMIT_BIT			= VK_BIT(2),
	VK_CMD_BUFFER_OPTIMIZE_DESCRIPTOR_SET_SWITCH_BIT	= VK_BIT(3),
};
typedef deUint32 VkCmdBufferOptimizeFlags;

enum VkQueryPipelineStatisticFlagBits
{
	VK_QUERY_PIPELINE_STATISTIC_IA_VERTICES_BIT		= VK_BIT(0),
	VK_QUERY_PIPELINE_STATISTIC_IA_PRIMITIVES_BIT	= VK_BIT(1),
	VK_QUERY_PIPELINE_STATISTIC_VS_INVOCATIONS_BIT	= VK_BIT(2),
	VK_QUERY_PIPELINE_STATISTIC_GS_INVOCATIONS_BIT	= VK_BIT(3),
	VK_QUERY_PIPELINE_STATISTIC_GS_PRIMITIVES_BIT	= VK_BIT(4),
	VK_QUERY_PIPELINE_STATISTIC_C_INVOCATIONS_BIT	= VK_BIT(5),
	VK_QUERY_PIPELINE_STATISTIC_C_PRIMITIVES_BIT	= VK_BIT(6),
	VK_QUERY_PIPELINE_STATISTIC_FS_INVOCATIONS_BIT	= VK_BIT(7),
	VK_QUERY_PIPELINE_STATISTIC_TCS_PATCHES_BIT		= VK_BIT(8),
	VK_QUERY_PIPELINE_STATISTIC_TES_INVOCATIONS_BIT	= VK_BIT(9),
	VK_QUERY_PIPELINE_STATISTIC_CS_INVOCATIONS_BIT	= VK_BIT(10),
};
typedef deUint32 VkQueryPipelineStatisticFlags;

VK_DEFINE_HANDLE_TYPE_TRAITS(VkObject);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkInstance);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkPhysicalDevice);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDevice);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkQueue);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkCmdBuffer);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkNonDispatchable);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDeviceMemory);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkBuffer);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkBufferView);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkImage);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkImageView);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkColorAttachmentView);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDepthStencilView);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkShader);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkPipeline);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkPipelineLayout);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkSampler);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDescriptorSet);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDescriptorSetLayout);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDescriptorPool);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDynamicStateObject);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDynamicVpState);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDynamicRsState);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDynamicCbState);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkDynamicDsState);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkFence);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkSemaphore);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkEvent);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkQueryPool);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkFramebuffer);
VK_DEFINE_HANDLE_TYPE_TRAITS(VkRenderPass);
