/* WARNING: This is auto-generated file. Do not modify, since changes will
 * be lost! Modify the generating script instead.
 */
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateInstanceFunc)					(const VkInstanceCreateInfo* pCreateInfo, VkInstance* pInstance);
typedef VK_APICALL VkResult		(VK_APIENTRY* DestroyInstanceFunc)					(VkInstance instance);
typedef VK_APICALL VkResult		(VK_APIENTRY* EnumeratePhysicalDevicesFunc)			(VkInstance instance, deUint32* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetPhysicalDeviceInfoFunc)			(VkPhysicalDevice physicalDevice, VkPhysicalDeviceInfoType infoType, deUintptr* pDataSize, void* pData);
typedef VK_APICALL FunctionPtr	(VK_APIENTRY* GetProcAddrFunc)						(VkPhysicalDevice physicalDevice, const char* pName);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDeviceFunc)						(VkPhysicalDevice physicalDevice, const VkDeviceCreateInfo* pCreateInfo, VkDevice* pDevice);
typedef VK_APICALL VkResult		(VK_APIENTRY* DestroyDeviceFunc)					(VkDevice device);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetGlobalExtensionInfoFunc)			(VkExtensionInfoType infoType, deUint32 extensionIndex, deUintptr* pDataSize, void* pData);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetPhysicalDeviceExtensionInfoFunc)	(VkPhysicalDevice physicalDevice, VkExtensionInfoType infoType, deUint32 extensionIndex, deUintptr* pDataSize, void* pData);
typedef VK_APICALL VkResult		(VK_APIENTRY* EnumerateLayersFunc)					(VkPhysicalDevice physicalDevice, deUintptr maxStringSize, deUintptr* pLayerCount, char* const* pOutLayers, void* pReserved);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetDeviceQueueFunc)					(VkDevice device, deUint32 queueNodeIndex, deUint32 queueIndex, VkQueue* pQueue);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueSubmitFunc)						(VkQueue queue, deUint32 cmdBufferCount, const VkCmdBuffer* pCmdBuffers, VkFence fence);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueAddMemReferencesFunc)			(VkQueue queue, deUint32 count, const VkDeviceMemory* pMems);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueRemoveMemReferencesFunc)			(VkQueue queue, deUint32 count, const VkDeviceMemory* pMems);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueWaitIdleFunc)					(VkQueue queue);
typedef VK_APICALL VkResult		(VK_APIENTRY* DeviceWaitIdleFunc)					(VkDevice device);
typedef VK_APICALL VkResult		(VK_APIENTRY* AllocMemoryFunc)						(VkDevice device, const VkMemoryAllocInfo* pAllocInfo, VkDeviceMemory* pMem);
typedef VK_APICALL VkResult		(VK_APIENTRY* FreeMemoryFunc)						(VkDevice device, VkDeviceMemory mem);
typedef VK_APICALL VkResult		(VK_APIENTRY* SetMemoryPriorityFunc)				(VkDevice device, VkDeviceMemory mem, VkMemoryPriority priority);
typedef VK_APICALL VkResult		(VK_APIENTRY* MapMemoryFunc)						(VkDevice device, VkDeviceMemory mem, VkDeviceSize offset, VkDeviceSize size, VkMemoryMapFlags flags, void** ppData);
typedef VK_APICALL VkResult		(VK_APIENTRY* UnmapMemoryFunc)						(VkDevice device, VkDeviceMemory mem);
typedef VK_APICALL VkResult		(VK_APIENTRY* FlushMappedMemoryFunc)				(VkDevice device, VkDeviceMemory mem, VkDeviceSize offset, VkDeviceSize size);
typedef VK_APICALL VkResult		(VK_APIENTRY* PinSystemMemoryFunc)					(VkDevice device, const void* pSysMem, deUintptr memSize, VkDeviceMemory* pMem);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetMultiDeviceCompatibilityFunc)		(VkPhysicalDevice physicalDevice0, VkPhysicalDevice physicalDevice1, VkPhysicalDeviceCompatibilityInfo* pInfo);
typedef VK_APICALL VkResult		(VK_APIENTRY* OpenSharedMemoryFunc)					(VkDevice device, const VkMemoryOpenInfo* pOpenInfo, VkDeviceMemory* pMem);
typedef VK_APICALL VkResult		(VK_APIENTRY* OpenSharedSemaphoreFunc)				(VkDevice device, const VkSemaphoreOpenInfo* pOpenInfo, VkSemaphore* pSemaphore);
typedef VK_APICALL VkResult		(VK_APIENTRY* OpenPeerMemoryFunc)					(VkDevice device, const VkPeerMemoryOpenInfo* pOpenInfo, VkDeviceMemory* pMem);
typedef VK_APICALL VkResult		(VK_APIENTRY* OpenPeerImageFunc)					(VkDevice device, const VkPeerImageOpenInfo* pOpenInfo, VkImage* pImage, VkDeviceMemory* pMem);
typedef VK_APICALL VkResult		(VK_APIENTRY* DestroyObjectFunc)					(VkDevice device, VkObjectType objType, VkObject object);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetObjectInfoFunc)					(VkDevice device, VkObjectType objType, VkObject object, VkObjectInfoType infoType, deUintptr* pDataSize, void* pData);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueBindObjectMemoryFunc)			(VkQueue queue, VkObjectType objType, VkObject object, deUint32 allocationIdx, VkDeviceMemory mem, VkDeviceSize memOffset);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueBindObjectMemoryRangeFunc)		(VkQueue queue, VkObjectType objType, VkObject object, deUint32 allocationIdx, VkDeviceSize rangeOffset, VkDeviceSize rangeSize, VkDeviceMemory mem, VkDeviceSize memOffset);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueBindImageMemoryRangeFunc)		(VkQueue queue, VkImage image, deUint32 allocationIdx, const VkImageMemoryBindInfo* pBindInfo, VkDeviceMemory mem, VkDeviceSize memOffset);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateFenceFunc)						(VkDevice device, const VkFenceCreateInfo* pCreateInfo, VkFence* pFence);
typedef VK_APICALL VkResult		(VK_APIENTRY* ResetFencesFunc)						(VkDevice device, deUint32 fenceCount, VkFence* pFences);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetFenceStatusFunc)					(VkDevice device, VkFence fence);
typedef VK_APICALL VkResult		(VK_APIENTRY* WaitForFencesFunc)					(VkDevice device, deUint32 fenceCount, const VkFence* pFences, deUint32 waitAll, deUint64 timeout);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateSemaphoreFunc)					(VkDevice device, const VkSemaphoreCreateInfo* pCreateInfo, VkSemaphore* pSemaphore);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueSignalSemaphoreFunc)				(VkQueue queue, VkSemaphore semaphore);
typedef VK_APICALL VkResult		(VK_APIENTRY* QueueWaitSemaphoreFunc)				(VkQueue queue, VkSemaphore semaphore);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateEventFunc)						(VkDevice device, const VkEventCreateInfo* pCreateInfo, VkEvent* pEvent);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetEventStatusFunc)					(VkDevice device, VkEvent event);
typedef VK_APICALL VkResult		(VK_APIENTRY* SetEventFunc)							(VkDevice device, VkEvent event);
typedef VK_APICALL VkResult		(VK_APIENTRY* ResetEventFunc)						(VkDevice device, VkEvent event);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateQueryPoolFunc)					(VkDevice device, const VkQueryPoolCreateInfo* pCreateInfo, VkQueryPool* pQueryPool);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetQueryPoolResultsFunc)				(VkDevice device, VkQueryPool queryPool, deUint32 startQuery, deUint32 queryCount, deUintptr* pDataSize, void* pData, VkQueryResultFlags flags);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetFormatInfoFunc)					(VkDevice device, VkFormat format, VkFormatInfoType infoType, deUintptr* pDataSize, void* pData);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateBufferFunc)						(VkDevice device, const VkBufferCreateInfo* pCreateInfo, VkBuffer* pBuffer);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateBufferViewFunc)					(VkDevice device, const VkBufferViewCreateInfo* pCreateInfo, VkBufferView* pView);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateImageFunc)						(VkDevice device, const VkImageCreateInfo* pCreateInfo, VkImage* pImage);
typedef VK_APICALL VkResult		(VK_APIENTRY* GetImageSubresourceInfoFunc)			(VkDevice device, VkImage image, const VkImageSubresource* pSubresource, VkSubresourceInfoType infoType, deUintptr* pDataSize, void* pData);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateImageViewFunc)					(VkDevice device, const VkImageViewCreateInfo* pCreateInfo, VkImageView* pView);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateColorAttachmentViewFunc)		(VkDevice device, const VkColorAttachmentViewCreateInfo* pCreateInfo, VkColorAttachmentView* pView);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDepthStencilViewFunc)			(VkDevice device, const VkDepthStencilViewCreateInfo* pCreateInfo, VkDepthStencilView* pView);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateShaderFunc)						(VkDevice device, const VkShaderCreateInfo* pCreateInfo, VkShader* pShader);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateGraphicsPipelineFunc)			(VkDevice device, const VkGraphicsPipelineCreateInfo* pCreateInfo, VkPipeline* pPipeline);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateGraphicsPipelineDerivativeFunc)	(VkDevice device, const VkGraphicsPipelineCreateInfo* pCreateInfo, VkPipeline basePipeline, VkPipeline* pPipeline);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateComputePipelineFunc)			(VkDevice device, const VkComputePipelineCreateInfo* pCreateInfo, VkPipeline* pPipeline);
typedef VK_APICALL VkResult		(VK_APIENTRY* StorePipelineFunc)					(VkDevice device, VkPipeline pipeline, deUintptr* pDataSize, void* pData);
typedef VK_APICALL VkResult		(VK_APIENTRY* LoadPipelineFunc)						(VkDevice device, deUintptr dataSize, const void* pData, VkPipeline* pPipeline);
typedef VK_APICALL VkResult		(VK_APIENTRY* LoadPipelineDerivativeFunc)			(VkDevice device, deUintptr dataSize, const void* pData, VkPipeline basePipeline, VkPipeline* pPipeline);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreatePipelineLayoutFunc)				(VkDevice device, const VkPipelineLayoutCreateInfo* pCreateInfo, VkPipelineLayout* pPipelineLayout);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateSamplerFunc)					(VkDevice device, const VkSamplerCreateInfo* pCreateInfo, VkSampler* pSampler);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDescriptorSetLayoutFunc)		(VkDevice device, const VkDescriptorSetLayoutCreateInfo* pCreateInfo, VkDescriptorSetLayout* pSetLayout);
typedef VK_APICALL VkResult		(VK_APIENTRY* BeginDescriptorPoolUpdateFunc)		(VkDevice device, VkDescriptorUpdateMode updateMode);
typedef VK_APICALL VkResult		(VK_APIENTRY* EndDescriptorPoolUpdateFunc)			(VkDevice device, VkCmdBuffer cmd);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDescriptorPoolFunc)				(VkDevice device, VkDescriptorPoolUsage poolUsage, deUint32 maxSets, const VkDescriptorPoolCreateInfo* pCreateInfo, VkDescriptorPool* pDescriptorPool);
typedef VK_APICALL VkResult		(VK_APIENTRY* ResetDescriptorPoolFunc)				(VkDevice device, VkDescriptorPool descriptorPool);
typedef VK_APICALL VkResult		(VK_APIENTRY* AllocDescriptorSetsFunc)				(VkDevice device, VkDescriptorPool descriptorPool, VkDescriptorSetUsage setUsage, deUint32 count, const VkDescriptorSetLayout* pSetLayouts, VkDescriptorSet* pDescriptorSets, deUint32* pCount);
typedef VK_APICALL void			(VK_APIENTRY* ClearDescriptorSetsFunc)				(VkDevice device, VkDescriptorPool descriptorPool, deUint32 count, const VkDescriptorSet* pDescriptorSets);
typedef VK_APICALL void			(VK_APIENTRY* UpdateDescriptorsFunc)				(VkDevice device, VkDescriptorSet descriptorSet, deUint32 updateCount, const void** ppUpdateArray);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDynamicViewportStateFunc)		(VkDevice device, const VkDynamicVpStateCreateInfo* pCreateInfo, VkDynamicVpState* pState);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDynamicRasterStateFunc)			(VkDevice device, const VkDynamicRsStateCreateInfo* pCreateInfo, VkDynamicRsState* pState);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDynamicColorBlendStateFunc)		(VkDevice device, const VkDynamicCbStateCreateInfo* pCreateInfo, VkDynamicCbState* pState);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateDynamicDepthStencilStateFunc)	(VkDevice device, const VkDynamicDsStateCreateInfo* pCreateInfo, VkDynamicDsState* pState);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateCommandBufferFunc)				(VkDevice device, const VkCmdBufferCreateInfo* pCreateInfo, VkCmdBuffer* pCmdBuffer);
typedef VK_APICALL VkResult		(VK_APIENTRY* BeginCommandBufferFunc)				(VkCmdBuffer cmdBuffer, const VkCmdBufferBeginInfo* pBeginInfo);
typedef VK_APICALL VkResult		(VK_APIENTRY* EndCommandBufferFunc)					(VkCmdBuffer cmdBuffer);
typedef VK_APICALL VkResult		(VK_APIENTRY* ResetCommandBufferFunc)				(VkCmdBuffer cmdBuffer);
typedef VK_APICALL void			(VK_APIENTRY* CmdBindPipelineFunc)					(VkCmdBuffer cmdBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline);
typedef VK_APICALL void			(VK_APIENTRY* CmdBindDynamicStateObjectFunc)		(VkCmdBuffer cmdBuffer, VkStateBindPoint stateBindPoint, VkDynamicStateObject dynamicState);
typedef VK_APICALL void			(VK_APIENTRY* CmdBindDescriptorSetsFunc)			(VkCmdBuffer cmdBuffer, VkPipelineBindPoint pipelineBindPoint, deUint32 firstSet, deUint32 setCount, const VkDescriptorSet* pDescriptorSets, deUint32 dynamicOffsetCount, const deUint32* pDynamicOffsets);
typedef VK_APICALL void			(VK_APIENTRY* CmdBindIndexBufferFunc)				(VkCmdBuffer cmdBuffer, VkBuffer buffer, VkDeviceSize offset, VkIndexType indexType);
typedef VK_APICALL void			(VK_APIENTRY* CmdBindVertexBuffersFunc)				(VkCmdBuffer cmdBuffer, deUint32 startBinding, deUint32 bindingCount, const VkBuffer* pBuffers, const VkDeviceSize* pOffsets);
typedef VK_APICALL void			(VK_APIENTRY* CmdDrawFunc)							(VkCmdBuffer cmdBuffer, deUint32 firstVertex, deUint32 vertexCount, deUint32 firstInstance, deUint32 instanceCount);
typedef VK_APICALL void			(VK_APIENTRY* CmdDrawIndexedFunc)					(VkCmdBuffer cmdBuffer, deUint32 firstIndex, deUint32 indexCount, deInt32 vertexOffset, deUint32 firstInstance, deUint32 instanceCount);
typedef VK_APICALL void			(VK_APIENTRY* CmdDrawIndirectFunc)					(VkCmdBuffer cmdBuffer, VkBuffer buffer, VkDeviceSize offset, deUint32 count, deUint32 stride);
typedef VK_APICALL void			(VK_APIENTRY* CmdDrawIndexedIndirectFunc)			(VkCmdBuffer cmdBuffer, VkBuffer buffer, VkDeviceSize offset, deUint32 count, deUint32 stride);
typedef VK_APICALL void			(VK_APIENTRY* CmdDispatchFunc)						(VkCmdBuffer cmdBuffer, deUint32 x, deUint32 y, deUint32 z);
typedef VK_APICALL void			(VK_APIENTRY* CmdDispatchIndirectFunc)				(VkCmdBuffer cmdBuffer, VkBuffer buffer, VkDeviceSize offset);
typedef VK_APICALL void			(VK_APIENTRY* CmdCopyBufferFunc)					(VkCmdBuffer cmdBuffer, VkBuffer srcBuffer, VkBuffer destBuffer, deUint32 regionCount, const VkBufferCopy* pRegions);
typedef VK_APICALL void			(VK_APIENTRY* CmdCopyImageFunc)						(VkCmdBuffer cmdBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage destImage, VkImageLayout destImageLayout, deUint32 regionCount, const VkImageCopy* pRegions);
typedef VK_APICALL void			(VK_APIENTRY* CmdBlitImageFunc)						(VkCmdBuffer cmdBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage destImage, VkImageLayout destImageLayout, deUint32 regionCount, const VkImageBlit* pRegions);
typedef VK_APICALL void			(VK_APIENTRY* CmdCopyBufferToImageFunc)				(VkCmdBuffer cmdBuffer, VkBuffer srcBuffer, VkImage destImage, VkImageLayout destImageLayout, deUint32 regionCount, const VkBufferImageCopy* pRegions);
typedef VK_APICALL void			(VK_APIENTRY* CmdCopyImageToBufferFunc)				(VkCmdBuffer cmdBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkBuffer destBuffer, deUint32 regionCount, const VkBufferImageCopy* pRegions);
typedef VK_APICALL void			(VK_APIENTRY* CmdCloneImageDataFunc)				(VkCmdBuffer cmdBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage destImage, VkImageLayout destImageLayout);
typedef VK_APICALL void			(VK_APIENTRY* CmdUpdateBufferFunc)					(VkCmdBuffer cmdBuffer, VkBuffer destBuffer, VkDeviceSize destOffset, VkDeviceSize dataSize, const deUint32* pData);
typedef VK_APICALL void			(VK_APIENTRY* CmdFillBufferFunc)					(VkCmdBuffer cmdBuffer, VkBuffer destBuffer, VkDeviceSize destOffset, VkDeviceSize fillSize, deUint32 data);
typedef VK_APICALL void			(VK_APIENTRY* CmdClearColorImageFunc)				(VkCmdBuffer cmdBuffer, VkImage image, VkImageLayout imageLayout, VkClearColor color, deUint32 rangeCount, const VkImageSubresourceRange* pRanges);
typedef VK_APICALL void			(VK_APIENTRY* CmdClearDepthStencilFunc)				(VkCmdBuffer cmdBuffer, VkImage image, VkImageLayout imageLayout, float depth, deUint32 stencil, deUint32 rangeCount, const VkImageSubresourceRange* pRanges);
typedef VK_APICALL void			(VK_APIENTRY* CmdResolveImageFunc)					(VkCmdBuffer cmdBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage destImage, VkImageLayout destImageLayout, deUint32 regionCount, const VkImageResolve* pRegions);
typedef VK_APICALL void			(VK_APIENTRY* CmdSetEventFunc)						(VkCmdBuffer cmdBuffer, VkEvent event, VkPipeEvent pipeEvent);
typedef VK_APICALL void			(VK_APIENTRY* CmdResetEventFunc)					(VkCmdBuffer cmdBuffer, VkEvent event, VkPipeEvent pipeEvent);
typedef VK_APICALL void			(VK_APIENTRY* CmdWaitEventsFunc)					(VkCmdBuffer cmdBuffer, VkWaitEvent waitEvent, deUint32 eventCount, const VkEvent* pEvents, deUint32 memBarrierCount, const void** ppMemBarriers);
typedef VK_APICALL void			(VK_APIENTRY* CmdPipelineBarrierFunc)				(VkCmdBuffer cmdBuffer, VkWaitEvent waitEvent, deUint32 pipeEventCount, const VkPipeEvent* pPipeEvents, deUint32 memBarrierCount, const void** ppMemBarriers);
typedef VK_APICALL void			(VK_APIENTRY* CmdBeginQueryFunc)					(VkCmdBuffer cmdBuffer, VkQueryPool queryPool, deUint32 slot, VkQueryControlFlags flags);
typedef VK_APICALL void			(VK_APIENTRY* CmdEndQueryFunc)						(VkCmdBuffer cmdBuffer, VkQueryPool queryPool, deUint32 slot);
typedef VK_APICALL void			(VK_APIENTRY* CmdResetQueryPoolFunc)				(VkCmdBuffer cmdBuffer, VkQueryPool queryPool, deUint32 startQuery, deUint32 queryCount);
typedef VK_APICALL void			(VK_APIENTRY* CmdWriteTimestampFunc)				(VkCmdBuffer cmdBuffer, VkTimestampType timestampType, VkBuffer destBuffer, VkDeviceSize destOffset);
typedef VK_APICALL void			(VK_APIENTRY* CmdCopyQueryPoolResultsFunc)			(VkCmdBuffer cmdBuffer, VkQueryPool queryPool, deUint32 startQuery, deUint32 queryCount, VkBuffer destBuffer, VkDeviceSize destOffset, VkDeviceSize destStride, VkQueryResultFlags flags);
typedef VK_APICALL void			(VK_APIENTRY* CmdInitAtomicCountersFunc)			(VkCmdBuffer cmdBuffer, VkPipelineBindPoint pipelineBindPoint, deUint32 startCounter, deUint32 counterCount, const deUint32* pData);
typedef VK_APICALL void			(VK_APIENTRY* CmdLoadAtomicCountersFunc)			(VkCmdBuffer cmdBuffer, VkPipelineBindPoint pipelineBindPoint, deUint32 startCounter, deUint32 counterCount, VkBuffer srcBuffer, VkDeviceSize srcOffset);
typedef VK_APICALL void			(VK_APIENTRY* CmdSaveAtomicCountersFunc)			(VkCmdBuffer cmdBuffer, VkPipelineBindPoint pipelineBindPoint, deUint32 startCounter, deUint32 counterCount, VkBuffer destBuffer, VkDeviceSize destOffset);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateFramebufferFunc)				(VkDevice device, const VkFramebufferCreateInfo* pCreateInfo, VkFramebuffer* pFramebuffer);
typedef VK_APICALL VkResult		(VK_APIENTRY* CreateRenderPassFunc)					(VkDevice device, const VkRenderPassCreateInfo* pCreateInfo, VkRenderPass* pRenderPass);
typedef VK_APICALL void			(VK_APIENTRY* CmdBeginRenderPassFunc)				(VkCmdBuffer cmdBuffer, const VkRenderPassBegin* pRenderPassBegin);
typedef VK_APICALL void			(VK_APIENTRY* CmdEndRenderPassFunc)					(VkCmdBuffer cmdBuffer, VkRenderPass renderPass);
